<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drafts on 人人都爱小雀斑&#39;s blog</title>
    <link>https://billie52707.cn/draft/</link>
    <description>Recent content in Drafts on 人人都爱小雀斑&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Billie</copyright>
    <lastBuildDate>Fri, 31 Dec 2021 02:30:10 +0000</lastBuildDate><atom:link href="https://billie52707.cn/draft/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2021年写字总结</title>
      <link>https://billie52707.cn/draft/2021/</link>
      <pubDate>Fri, 31 Dec 2021 02:30:10 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/2021/</guid>
      <description>生活 工作</description>
    </item>
    
    <item>
      <title>python模块详解 | xlrd</title>
      <link>https://billie52707.cn/draft/python-xlrd/</link>
      <pubDate>Tue, 21 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-xlrd/</guid>
      <description>基本操作 import xlrd # 打开文件</description>
    </item>
    
    <item>
      <title>「pycharm」学习笔记</title>
      <link>https://billie52707.cn/draft/pycharm/</link>
      <pubDate>Mon, 20 Dec 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/pycharm/</guid>
      <description>快捷键 import win: Alt + Enter mac: option + Enter pep8 mac：option+command+L</description>
    </item>
    
    <item>
      <title>博客上线一周年 | 半年来的工作感悟 | 好快，居然已经毕业了！</title>
      <link>https://billie52707.cn/draft/one-three-year/</link>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/one-three-year/</guid>
      <description>$(function () { var html = &#34;\n\n\u003cSCRIPT language=JavaScript\u003e \n\nfunction password() { \n\nvar testV = 1; \n\nvar pass1 = prompt(\u0027请输入密码:\u0027,\u0027\u0027); \n\nwhile (testV \u003c 3) { \n\nif (!pass1) \n\nhistory.go(-1); \n\nif (pass1 == \u00221236\u0022)</description>
    </item>
    
    <item>
      <title>python模块详解 | tensorflow</title>
      <link>https://billie52707.cn/draft/python-tensorflow/</link>
      <pubDate>Thu, 08 Jul 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-tensorflow/</guid>
      <description></description>
    </item>
    
    <item>
      <title>python模块详解 | sqlalchemy</title>
      <link>https://billie52707.cn/draft/python-sqlalchemy/</link>
      <pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-sqlalchemy/</guid>
      <description>SQLAlchemy 1.4 Documentation 传说中的ORM技术：Object-Relational Mapping，把关系数据库的表结构映射到对象上。 但是由谁来做这个转换呢？所以O</description>
    </item>
    
    <item>
      <title>python模块详解 | xmind</title>
      <link>https://billie52707.cn/draft/python-xmind/</link>
      <pubDate>Wed, 07 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-xmind/</guid>
      <description>官方文档 - https://pypi.org/project/XMind/</description>
    </item>
    
    <item>
      <title>python模块详解 | opencv</title>
      <link>https://billie52707.cn/draft/python-opencv/</link>
      <pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-opencv/</guid>
      <description>》》》常用函数《《《 图像读取：cv.imread() 图像显示：cv.imshow() 图像叠加：cv.addWeighted() 键盘响应：cv</description>
    </item>
    
    <item>
      <title>python模块详解 | multiprocessing</title>
      <link>https://billie52707.cn/draft/python-multiprocessing/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-multiprocessing/</guid>
      <description>官方文档 - https://docs.python.org/zh-cn/3/library/multiprocessing.html 计算运行时间 import multiprocessing as mp import time def target(arg): ... if __name__ == &amp;#39;__main__&amp;#39; start = time.time() processes = [] for i in range(5): process = mp.Process(target=target, args=(i,)) process.start() # processes.append(process) for process in processes: process.join() # end = time.time() print(f&amp;#39;共耗时：{en</description>
    </item>
    
    <item>
      <title>线程、进程、协程，该用哪一个比较好？</title>
      <link>https://billie52707.cn/draft/thread-process-coroutine/</link>
      <pubDate>Fri, 02 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/thread-process-coroutine/</guid>
      <description></description>
    </item>
    
    <item>
      <title>python模块详解 | aiohttp (server)</title>
      <link>https://billie52707.cn/draft/python-aiohttp-server/</link>
      <pubDate>Tue, 08 Jun 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-aiohttp-server/</guid>
      <description>About Key Features Supports both Client and HTTP Server. Supports both Server WebSockets and Client WebSockets out-of-the-box without the Callback Hell. Web-server has Middlewares, Signals and plugable routing. 客户端 - https://docs.aiohttp.org/en/stable/client.html#aiohttp-client 服务端 - https://docs.aiohttp.org/en/stable/web.html#aiohttp-web asyncio - https://billie52707.cn/posts/2021/5/python-asyncio/ Hello,world! from aiohttp import web routes = web.RouteTableDef() @routes.get(&amp;#39;/&amp;#39;) async def hello(request): return web.Response(text=&amp;#34;Hello,world!&amp;#34;) app = web.Application() app.add_routes(routes) web.run_app(app) Handler A request handler must be a coroutine that accepts</description>
    </item>
    
    <item>
      <title>python模块详解 | Django</title>
      <link>https://billie52707.cn/draft/python-django/</link>
      <pubDate>Tue, 08 Jun 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-django/</guid>
      <description></description>
    </item>
    
    <item>
      <title>python模块详解 | flask</title>
      <link>https://billie52707.cn/draft/python-flask/</link>
      <pubDate>Tue, 08 Jun 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-flask/</guid>
      <description>创建虚拟环境 python3 -m venv venv source ./venv/bin/activate 在终端里导出 FLASK_APP 环境变量，运行应用 export FLASK_APP=&#39;server.py&#39; flask run ps：等号两边无空格</description>
    </item>
    
    <item>
      <title>python模块详解 | hashlib</title>
      <link>https://billie52707.cn/draft/python-hashlib/</link>
      <pubDate>Tue, 08 Jun 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-hashlib/</guid>
      <description>什么是hash？ hash是一种算法，该算法通过传值，经过运算得到一串hash值。hash函数有很多种类型，不同之处是其复杂度不同。 hash值</description>
    </item>
    
    <item>
      <title>「rsa」学习笔记</title>
      <link>https://billie52707.cn/draft/rsa/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/rsa/</guid>
      <description>图解RSA算法</description>
    </item>
    
    <item>
      <title>网络爬虫学习笔记</title>
      <link>https://billie52707.cn/draft/spider/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/spider/</guid>
      <description>反爬虫笔记 验证码 思路 - 商用API接口、打码平台、自主训练深度学习模型等 伪造headers（请求头） 简介 - 简单的headers可应对反爬很一般</description>
    </item>
    
    <item>
      <title>钢琴学习笔记</title>
      <link>https://billie52707.cn/draft/piano/</link>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/piano/</guid>
      <description>音阶 调 旋律与和声</description>
    </item>
    
    <item>
      <title>python模块详解 | Scrapy</title>
      <link>https://billie52707.cn/draft/python-scrapy/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-scrapy/</guid>
      <description>安装 - pip install scrapy 新建项目 - scrapy startproject project_name /项目目录层级关系/ scrapy.cfg: 项目的配置文件 tutorial/: 该项目的python模块。之后您将在此加入代码。 tutorial/items.py: 项目中的item文件. tutorial/pipelines.py:</description>
    </item>
    
    <item>
      <title>达观工作笔记</title>
      <link>https://billie52707.cn/draft/data-grand/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/data-grand/</guid>
      <description>工作日志 2021.05.07 第一次在本公司上班 2021.05.20 今日任务 开发博客新功能“Most recent”，记录最新更新的文章 2021.05.28 STAR法则 Situation： 事情是在什</description>
    </item>
    
    <item>
      <title>python模块详解 | threading</title>
      <link>https://billie52707.cn/draft/python-threading/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-threading/</guid>
      <description>官方文档 - https://docs.python.org/zh-cn/3/library/threading.html 线程 创建子线程 - threading.Thread() import threading def func(i): print(i) threading.Thread(target = func, args = (1,)) 计算运行时间 import threading, time def target(arg): ... if __name__ == &amp;#39;__main__&amp;#39; start = time.time() threads = [] for i in range(5): thread = threading.Thread(target = target, args = (i,)) thread.start() threads.append(thread) for thread in threads: thread.join() end = time.time()</description>
    </item>
    
    <item>
      <title>「docker」学习笔记 | 容器编排之Docker Swarm</title>
      <link>https://billie52707.cn/draft/docker4/</link>
      <pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/docker4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>使用docker容器化部署服务器</title>
      <link>https://billie52707.cn/draft/aliyun-server-docker/</link>
      <pubDate>Tue, 27 Apr 2021 02:30:10 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/aliyun-server-docker/</guid>
      <description>新建容器 docker run -itd --name chenxuefan -p 24:22 --privileged centos /usr/sbin/init --privileged 使用该参数，container内的root拥有真正的root权限。 否则，container内的root只是外部</description>
    </item>
    
    <item>
      <title>我的博客项目开发文档</title>
      <link>https://billie52707.cn/draft/billie52707/</link>
      <pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/billie52707/</guid>
      <description>功能设计 需求阐述 统计 - 各个文件类型的文件个数和总文件大小（已完成） 将每日统计的数据，以日期为sheet的命名，写入sheet表（已完成） 命名</description>
    </item>
    
    <item>
      <title>python模块详解 | keyboard</title>
      <link>https://billie52707.cn/draft/python-keyboard/</link>
      <pubDate>Thu, 15 Apr 2021 20:54:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-keyboard/</guid>
      <description>write(text, delay=0, restore_state_after=True, exact=None) send(hotkey, do_press=True, do_release=True) press_and_release() /换汤不换药/ is_pressed() parse_hotkey(hotkey)</description>
    </item>
    
    <item>
      <title>大厂求索记</title>
      <link>https://billie52707.cn/draft/burn_them_all/</link>
      <pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/burn_them_all/</guid>
      <description>前言 平凡的一个周一的晚上，朝哥通过了微信的面试，即将进入大厂行列，踏上了逆袭的第一步。恭喜！ LeeCode，我吃定你了</description>
    </item>
    
    <item>
      <title>深信息学生信息查询系统</title>
      <link>https://billie52707.cn/draft/scores-search/</link>
      <pubDate>Tue, 08 Dec 2020 02:30:10 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/scores-search/</guid>
      <description>技术栈 🀄️ Django requests rsa nginx 项目简介 ➖ 此项目旨在「方便同学查询学科成绩」，以往查询成绩的方式主要为 登录教务系统，查看成绩，需要连接学校内网，过程较为繁</description>
    </item>
    
    <item>
      <title>python模块详解 | pyqt5</title>
      <link>https://billie52707.cn/draft/python-pyqt5/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-pyqt5/</guid>
      <description>前言 PyQt5简介 PyQt是QT框架的Python语言实现，存在有PyQt3，PyQt4，PyQt5三个版本。PyQt5已经于之前的版本有较</description>
    </item>
    
    <item>
      <title>风格迁移 - GUI设计文档</title>
      <link>https://billie52707.cn/draft/pyqt-style-transform/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/pyqt-style-transform/</guid>
      <description>布局篇 简单来一张图看一看 主体使用QGridLayout进行布局，分为三块，三块分别用QGridLayout、QHBoxLayout、QGri</description>
    </item>
    
    <item>
      <title>python模块详解 | matplotlib</title>
      <link>https://billie52707.cn/draft/python-matplotlib/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/python-matplotlib/</guid>
      <description>一、图表的保存 ## 保存图片 直接输入文件路径，新建文件名字 ## dpi图片分辨率 越高越清晰。bbox_inches = &#39;tight&#39;,去掉空白部分 plt.savefig(r&#39;C:\Users\admin\Pictures\Camera Roll\exam_annotate1.jpg&#39;,</description>
    </item>
    
    <item>
      <title>武汉之行</title>
      <link>https://billie52707.cn/draft/wuhan/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/wuhan/</guid>
      <description>酒店篇 整体环境 29/日下午五点半到的酒店，共有九层，到前台办理入住之后就上楼了，我们都在六楼，有两人间和大床间可选，我们学生住两人的，两个老</description>
    </item>
    
    <item>
      <title>「markdown」学习笔记</title>
      <link>https://billie52707.cn/draft/markdown/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/markdown/</guid>
      <description>代码增删对比效果 - old man + new guy</description>
    </item>
    
    <item>
      <title></title>
      <link>https://billie52707.cn/draft/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/vim/</guid>
      <description></description>
    </item>
    
    <item>
      <title>API</title>
      <link>https://billie52707.cn/draft/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/api/</guid>
      <description>2020豆瓣电影最新api 获取正在热映的电影：http://api.douban.com/v2/movie/in_theaters?apik</description>
    </item>
    
    <item>
      <title>bt</title>
      <link>https://billie52707.cn/draft/bt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/bt/</guid>
      <description>启动 sudo /etc/init.d/bt default 重启 sudo bt restart</description>
    </item>
    
    <item>
      <title>css提高</title>
      <link>https://billie52707.cn/draft/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/css/</guid>
      <description>渐变 线性渐变 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;style&amp;gt; /* 标准写法 */ section{ width: 300px; height: 300px; background: linear-gradient(to right bottom,red 5%,green 10%,blue) /* linear-gradient(参数) 参数：方向、颜色 1.方向 - 从一个边到另外一</description>
    </item>
    
    <item>
      <title>docker心路历程</title>
      <link>https://billie52707.cn/draft/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/docker/</guid>
      <description>-bash: docker-machine: command not found（macOS） base=https://github.com/docker/machine/releases/download/v0.14.0 &amp;amp;&amp;amp; curl -L $base/docker-machine-$(uname -s)-$(uname -m) &amp;gt;/usr/local/bin/docker-machine &amp;amp;&amp;amp; chmod +x /usr/local/bin/docker-machine ​</description>
    </item>
    
    <item>
      <title>HTML标签总结</title>
      <link>https://billie52707.cn/draft/html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/html/</guid>
      <description>font size color face img src height width title alt 列表 无序列表 ul 属性： type：circle disc square 例： &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; 有序列表 ol 属性： type：1 a A i I 例： &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;ol&amp;gt; table border cellspacing cellpadding width height</description>
    </item>
    
    <item>
      <title>other</title>
      <link>https://billie52707.cn/draft/other/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billie52707.cn/draft/other/</guid>
      <description>注册香港apple id及充值教程 URI &amp;amp; URL URI 在于I(Identifier)，是统一资源标示符，可以唯一标识一个资源。 URL在于L(Locater</description>
    </item>
    
  </channel>
</rss>
